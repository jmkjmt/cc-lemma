(
(data Nat (Z S))
(:: Z Nat)
(:: S (-> (Nat) Nat))

(data Bool (True False))
(:: True Bool)
(:: False Bool)

(:: ite (-> (Bool a a) a))
(let ite (True ?x ?y ) ?x)
(let ite (False ?x ?y) ?y)

(:: add1 (-> (Nat Nat) Nat))
(let add1 (Z ?y) ?y)
(let add1 ((S ?x) ?y) (S (add1 ?x ?y)))

(:: add2 (-> (Nat Nat) Nat))
(let add2 (?n1 Z) ?n1)
(let add2 (?n1 (S ?n)) (S (add2 ?n1 ?n)))

(:: add3 (-> (Nat Nat) Nat))
(let add3 (Z ?n2) ?n2)
(let add3 ((S ?n) ?n2) (add3 ?n (S ?n2)))

(:: add4 (-> (Nat Nat) Nat))
(let add4 (?n1 Z) ?n1)
(let add4 (?n1 (S ?n)) (add4 (S ?n1) ?n))

(:: sol4 (-> (Nat Nat) Nat))
(let sol4 ((S ?x) (S ?y)) (S (S (sol4 ?x ?y))))
(let sol4 ((S ?x) Z) (S (sol4 ?x Z)))
(let sol4 (Z (S ?y)) (S (sol4 Z ?y)))
(let sol4 (Z Z) Z)

(:: sol6 (-> (Nat Nat) Nat))
(let sol6 (Z ?y) ?y)
(let sol6 ((S ?x) ?y) (S (sol6 ?y ?x)))


(:: sol11 (-> (Nat Nat) Nat))
(let sol11 (?a Z) (oneadd ?a))
(let sol11 (?a (S ?b1)) (S (sol11 ?a ?b1)))
(:: oneadd (-> (Nat) Nat))
(let oneadd (Z) Z)
(let oneadd ((S ?a1)) (S (oneadd ?a1)))


(//
    sol22 uses integer.......
//)

(:: sol143 (-> (Nat Nat) Nat))
(let sol143 (?n1 ?n2) (ite (eq ?n1 Z) (add ?n2 ?n1) (add ?n1 ?n2)))
(:: add (-> (Nat Nat) Nat))
(let add (?a Z) ?a)
(let add (?a (S ?n)) (add (S ?a) ?n))

(=== ta1-ta2 (n m) (Nat Nat)
    (add1 n m)
    (add2 n m)
)
(=== ta1-ta2 (n m) (Nat Nat)
    (add1 n m)
    (add2 n m)
)
(=== ta1-ta3 (n m) (Nat Nat)
    (add1 n m)
    (add3 n m)
)
(=== ta1-ta4 (n m) (Nat Nat)
    (add1 n m)
    (add4 n m)
)
(=== ta1-sol4 (n m) (Nat Nat)
    (add1 n m)
    (sol4 n m)
)
(=== ta1-sol6 (n m) (Nat Nat)
    (add1 n m)
    (sol6 n m)
)
(=== ta1-sol11 (n m) (Nat Nat)
    (add1 n m)
    (sol11 n m)
)
(=== ta1-sol143 (n m) (Nat Nat)
    (add1 n m)
    (sol143 n m)
)

)
