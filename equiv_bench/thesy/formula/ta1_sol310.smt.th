(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Formula () ((True Formula) (False Formula) (Not Formula Formula) (AndAlso Formula Formula Formula) (OrElse Formula Formula Formula) (Imply Formula Formula Formula) (Equal Exp Exp Formula)))
(datatype Exp () ((Num Nat Exp) (Plus Exp Exp Exp) (Plus Exp Exp Exp)))
(declare-fun ta1 (Formula) Bool)
(declrea-fun ta1_expeval (Formula) Nat)
(declrea-fun eval_help (Formula) Formula)
(declrea-fun convert (Formula) Bool)
(declare-fun add (Nat Nat) Nat)
(declare-fun sub (Nat Nat) Nat)
(declare-fun sol441 (Formula) Bool)

(=> rule0 (add zero ?n) ?n)
(=> rule1 (add (succ ?n) ?m) (succ (add ?n ?m)))
(=> rule2 (sub zero ?m) zero)
(=> rule3 (sub (succ ?n) zero) (succ ?n))
(=> rule4 (sub (succ ?n) (succ ?m)) (sub ?n ?m))
(=> rule5 (ta1_expeval (Num ?n)) ?n)
(=> rule6 (ta1_expeval (Plus ?e1 ?e2)) (add (ta1_expeval ?e1) (ta1_expeval ?e2)))
(=> rule7 (ta1_expeval (Minus ?e1 ?e2)) (minuse (ta1_expeval ?e1) (ta1_expeval ?e2)))
(=> rule8 (ta1 (True)) true)
(=> rule9 (ta1 (False)) false)
(=> rule10 (ta1 (Not ?f)) (not (ta1 ?f)))
(=> rule11 (ta1 (AndAlso ?f1 ?f2)) (and (ta1 ?f1) (ta1 ?f2)))
(=> rule12 (ta1 (OrElse ?f1 ?f2)) (or (ta1 ?f1) (ta1 ?f2)))
(=> rule13 (ta1 (Imply ?f1 ?f2)) (or (not (ta1 ?f1)) (ta1 ?f2)))
(=> rule14 (ta1 (Equal ?e1 ?e2)) (= (ta1 ?e1) (ta1 ?e2)))

(=> rule15 (eval_help (True)) True)
(=> rule16 (eval_help (False)) False)
(=> rule17 (eval_help (Not True)) False)
(=> rule18 (eval_help (Not False)) True)
(=> rule19 (eval_help (Not ?f)) (eval_help (Not (eval_help ?f))))
(=> rule20 (eval_help (AndAlso True True)) True)
(=> rule21 (eval_help (AndAlso True False)) False)
(=> rule22 (eval_help (AndAlso False ?f1)) False)
(=> rule23 (eval_help (AndAlso ?f1 ?f2)) (eval_help (AndAlso (eval_help ?f1) (eval_help ?f2))))
(=> rule24 (eval_help (OrElse True ?f1)) True)
(=> rule25 (eval_help (OrElse False True)) True)
(=> rule26 (eval_help (OrElse False False)) False)
(=> rule27 (eval_help (OrElse ?f1 ?f2)) (eval_help (OrElse (eval_help ?f1) (eval_help ?f2))))
(=> rule28 (eval_help (Imply False ?f1)) True)
(=> rule29 (eval_help (Imply True False)) False)
(=> rule30 (eval_help (Imply True True)) True)
(=> rule31 (eval_help (Imply ?f1 ?f2)) (eval_help (Imply (eval_help ?f1) (eval_help ?f2))))
(=> rule32 (eval_help (Equal ?e1 ?e2)) (ite (= (ta1_expeval ?e1) (ta1_expeval ?e2)) True False))

(=> rule33 (convert True) true)
(=> rule34 (convert False) false)

(=> rule35 (sol441 ?f) (ite (convert (eval_help ?f)) (true) (false)))
(prove (forall ((f Formula)) (= (ta1 f) (ta1 f))))
