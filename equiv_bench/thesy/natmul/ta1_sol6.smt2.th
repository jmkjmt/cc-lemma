(datatype Nat () ((S Nat Nat) (Z Nat)))

(declare-fun add1 (Nat Nat) Nat)
(declare-fun mul1 (Nat Nat) Nat)
(declare-fun add-6 (Nat Nat) Nat)
(declare-fun sol6 (Nat Nat) Nat)

(=> rule1 (add1 Z ?y) ?y)
(=> rule2 (add1 (S ?x) ?y) (S (add1 ?x ?y)))


(=> rule3 (mul1 Z ?n2) Z)
(=> rule4 (mul1 (S ?n) ?n2) (add1 ?n2 (mul1 ?n ?n2)))

(=> rule5 (add-6 Z ?y) ?y)
(=> rule6 (add-6 (S ?x) ?y) (S (add-6 ?y ?x)))
(=> rule7 (sol6 Z ?n2) Z)
(=> rule8 (sol6 (S ?x) ?n2) (add-6 ?n2 (sol6 ?n2 ?x)))

(prove (forall ((n Nat) (m Nat)) (= (mul1 n m) (sol6 n m))))