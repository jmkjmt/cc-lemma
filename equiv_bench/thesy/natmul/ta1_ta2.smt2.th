(datatype Nat () ((S Nat Nat) (Z Nat)))

(declare-fun add1 (Nat Nat) Nat)
(declare-fun mul1 (Nat Nat) Nat)
(declare-fun mul2 (Nat Nat) Nat)

(=> rule1 (add1 Z ?y) ?y)
(=> rule2 (add1 (S ?x) ?y) (S (add1 ?x ?y)))

(=> rule3 (mul1 Z ?n2) Z)
(=> rule4 (mul1 (S ?n) ?n2) (add1 ?n2 (mul1 ?n ?n2)))

(=> rule5 (mul2 Z ?n2) Z)
(=> rule6 (mul2 (S ?n) ?n2) (add1 (mul2 ?n ?n2) ?n2))

(prove (forall ((n Nat) (m Nat)) (= (mul1 n m) (mul2 n m))))